name: Electron Playwright Tests

on:
  push:
    branches:
      - test_ci_linux
  pull_request:
    branches:
      - master

jobs:
  e2e-linux:
    runs-on: ${{ matrix.os }}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: mostest
          POSTGRES_USER: mmuser
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - "5432"

    strategy:
      matrix:
        os: [ubuntu-latest] #,  ubuntu-latest, windows-latest]
        node-version: [18.x]

    steps:

      - name: Check out code
        uses: actions/checkout@v3.5.3

      - name: Set up Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

#   Linux

      - name: Install packages (Ubuntu OS)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get install libxtst-dev libpng++-dev
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Checkout mattermost
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          repository: mattermost/mattermost
          path: mattermost

      - name: Run mattermsot server
        run: |
          cd mattermost/server/
          make run-server
          max_attempts=10
          for i in $(seq $max_attempts); do
            if curl -iL http://localhost:8065/api/v4/system/ping | grep -q "status"; then
              echo "Mattermost server is up and running."
              break
            else
              echo "Waiting for Mattermost server to be responsive... Attempt $i of $max_attempts"
              sleep 10
            fi
          done
          if ! curl -iL http://localhost:8065/api/v4/system/ping | grep -q "status"; then
            echo "Mattermost server did not start correctly after $max_attempts attempts."
            exit 1
          fi
        env:
          MM_LOGSETTINGS_ENABLECONSOLE: false
          MM_LOGSETTINGS_FILELEVEL: debug
          MM_SQLSETTINGS_DATASOURCE: postgres://mmuser:mostest@localhost/postgres?sslmode=disable&connect_timeout=10&binary_parameters=yes
          MM_TEAMSETTINGS_ENABLEOPENSERVER: true            

      - name: Install dependencies
        run: npm ci

      - name: Run Playwright tests (Ubuntu OS)
        if: matrix.os == 'ubuntu-latest'
        run: |
          export DISPLAY=:99
          Xvfb $DISPLAY -screen 0 1024x768x24 > /dev/null 2>&1 &
          npm run test:e2e || true
          # npm run test:e2e:send-report

#   Windows

      - name: Install packages (Windows OS)
        if: matrix.os == 'windows-latest'
        run: |
          npm install -g windows-build-tools
          npm install -g npm@latest
          npm install -g node-gyp
          npm install -g @electron/rebuild
          node-gyp install

      - name: Rebuild robotjs (Windows OS)
        if: matrix.os == 'windows-latest'
        run: |
          SET CL='/std:c++17'
          npx electron-rebuilds -m ./node_modules/robotjs

      - name: Run Playwright tests (Windows OS)
        if: matrix.os == 'windows-latest'
        run: |
          npm run test:e2e
          npm run test:e2e:send-report

#   Mac OS

      - name: Run Playwright tests (Mac OS)
        if: matrix.os == 'macos-latest'
        run: |
          npm run test:e2e || true
          npm run test:e2e:send-report

      - name: Upload Mochawesome Report
        uses: actions/upload-artifact@v3.1.2
        with:
          name: mochawesome-report
          path: /home/runner/work/desktop/desktop/mochawesome-report/mochawesome.html

  # e2e-ubuntu:
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [ubuntu-latest] #,  ubuntu-latest, windows-latest]
  #       node-version: [18.x]

  #   steps:

  #     - name: Check out code
  #       uses: actions/checkout@v3.5.3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3.7.0
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'

  #     - name: Install packages (Linux)
  #       if: matrix.os == 'ubuntu-latest'
  #       run: sudo apt-get install libxtst-dev libpng++-dev

  #     - name: Install packages (Windows)
  #       if: matrix.os == 'windows-latest'
  #       run: |
  #         npm install -g windows-build-tools
  #         npm install -g npm@latest
  #         npm install -g node-gyp
  #         npm install -g @electron/rebuild
  #         node-gyp install

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Rebuild robotjs (Windows)
  #       if: matrix.os == 'windows-latest'
  #       run: |
  #         SET CL='/std:c++17'
  #         npx electron-rebuilds -m ./node_modules/robotjs

  #     - name: Run Playwright tests (Linux)
  #       if: matrix.os == 'ubuntu-latest'
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y xvfb
  #         export DISPLAY=:99
  #         Xvfb $DISPLAY -screen 0 1024x768x24 > /dev/null 2>&1 &
  #         npm run test:e2e || true
  #         # npm run test:e2e:send-report

  #     - name: Run Playwright tests (Mac OS)
  #       if: matrix.os == 'macos-latest'
  #       run: |
  #         npm run test:e2e
  #         npm run test:e2e:send-report

  #     - name: Run Playwright tests (Windows OS)
  #       if: matrix.os == 'windows-latest'
  #       run: |
  #         npm run test:e2e
  #         npm run test:e2e:send-report

  #     - name: Upload Mochawesome Report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: mochawesome-report
  #         path: /home/runner/work/desktop/desktop/mochawesome-report/mochawesome.html

  # e2e-windows:
  #   runs-on: ${{ matrix.os }}

  #   strategy:
  #     matrix:
  #       os: [windows-latest] #,  ubuntu-latest, windows-latest]
  #       node-version: [18.x]

  #   steps:

  #     - name: Check out code
  #       uses: actions/checkout@v3.5.3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3.7.0
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'

  #     - name: Install packages (Linux)
  #       if: matrix.os == 'ubuntu-latest'
  #       run: sudo apt-get install libxtst-dev libpng++-dev

  #     - name: Install packages (Windows)
  #       if: matrix.os == 'windows-latest'
  #       run: |
  #         npm install -g windows-build-tools
  #         npm install -g npm@latest
  #         npm install -g node-gyp
  #         npm install -g @electron/rebuild
  #         node-gyp install

  #     - name: Install dependencies
  #       run: npm ci

  #     - name: Rebuild robotjs (Windows)
  #       if: matrix.os == 'windows-latest'
  #       run: |
  #         SET CL='/std:c++17'
  #         npx electron-rebuilds -m ./node_modules/robotjs

  #     - name: Run Playwright tests (Linux)
  #       if: matrix.os == 'ubuntu-latest'
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y xvfb
  #         export DISPLAY=:99
  #         Xvfb $DISPLAY -screen 0 1024x768x24 > /dev/null 2>&1 &
  #         npm run test:e2e
  #         npm run test:e2e:send-report

  #     - name: Run Playwright tests (Mac OS)
  #       if: matrix.os == 'macos-latest'
  #       run: |
  #         npm run test:e2e
  #         npm run test:e2e:send-report

  #     - name: Run Playwright tests (Windows OS)
  #       if: matrix.os == 'windows-latest'
  #       run: |
  #         npm run test:e2e || true
  #         npm run test:e2e:send-report

  #     - name: Upload Mochawesome Report
  #       uses: actions/upload-artifact@v2
  #       with:
  #         name: mochawesome-report
  #         path: /home/runner/work/desktop/desktop/mochawesome-report/mochawesome.html
