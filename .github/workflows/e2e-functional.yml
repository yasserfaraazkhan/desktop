name: Electron Playwright Tests

on:
  push:
    branches:
      - test_ci_linux
  pull_request:
    branches:
      - master

env:
  AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
  AWS_S3_BUCKET: ${{ secrets.AWS_S3_BUCKET }}
  AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  BRANCH_NAME: ${{ github.ref }}
  BUILD_SUFFIX: 'desktop-pr'
  DNS_RECORD_1: "https://localhost:8065"
  JIRA_PROJECT_KEY: 'MM'
  PULL_REQUEST_BASE_URL: "https://github.com/mattermost/desktop/pull/"
  PULL_REQUEST: ${{ github.event_name == 'pull_request' && ${PULL_REQUEST_BASE_URL}${{ github.event.pull_request.number }} || '' }}
  TEST_CYCLE_LINK_PREFIX: ${{ secrets.TEST_CYCLE_LINK_PREFIX }}
  TYPE: ${{ github.event_name == 'pull_request' && 'PR' || '' }}
  WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}
  ZEPHYR_API_KEY: ${{ secrets.ZEPHYR_API_KEY }}
  ZEPHYR_ENABLE: 'true'
  ZEPHYR_ENVIRONMENT_NAME: 'Desktop app'
  ZEPHYR_FOLDER_ID: ${{ secrets.ZEPHYR_FOLDER_ID }}

jobs:
  e2e-linux:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest] #,  ubuntu-latest, windows-latest]
        node-version: [18.x]

    steps:

      - name: Check out code
        uses: actions/checkout@v3.5.3

      - name: Set up Node.js
        uses: actions/setup-node@v3.7.0
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install packages (Ubuntu OS)
        run: |
          sudo apt-get install libxtst-dev libpng++-dev
          sudo apt-get update
          sudo apt-get install -y xvfb

      - name: Checkout mattermost
        uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
        with:
          repository: mattermost/mattermost
          path: mattermost

      - name: Run mattermsot server
        run: |
          cd mattermost/e2e-tests
          echo "SERVER_IMAGE=mattermost/mattermost-enterprise-edition:release-8.0" >.ci/env
          make start-server && make prepare-server

      - name: Set Environment Variables
        run: |
          echo "BUILD_ID=${{ github.run_id }}-${{ env.BUILD_SUFFIX}}-${{ runner.os }}" >> $GITHUB_ENV
          echo "BUILD_TAG=${GITHUB_SHA::7}" >> $GITHUB_ENV

      - name: Print Environment Variables
        run: |
          echo "PULL_REQUEST: ${{ env.PULL_REQUEST }}"
          echo "BUILD_ID: ${{ env.BUILD_ID }}"
          echo "BRANCH: ${{ env.BRANCH }}"
          echo "MM_TEST_SERVER_URL: ${{ env.MM_TEST_SERVER_URL }}"
          echo "ZEPHYR_ENABLE: ${{ env.ZEPHYR_ENABLE }}"
          echo "ZEPHYR_ENVIRONMENT_NAME: ${{ env.ZEPHYR_ENVIRONMENT_NAME }}"
          echo "ZEPHYR_FOLDER_ID: ${{ env.ZEPHYR_FOLDER_ID }}"
          echo "BUILD_TAG: ${{ env.BUILD_TAG }}"
          echo "PULL_REQUEST: ${{ env.PULL_REQUEST }}"
          echo "BUILD_SUFFIX: ${{ env.BUILD_SUFFIX }}"
          echo "TYPE: ${{ env.TYPE }}"
          echo "JIRA_PROJECT_KEY: ${{ env.JIRA_PROJECT_KEY }}"
          echo "DNS_RECORD_1: ${{ env.DNS_RECORD_1 }}"
          echo "AWS_SECRET_ACCESS_KEY: ${{ env.AWS_SECRET_ACCESS_KEY }}"
          echo "WEBHOOK_URL: ${{ secrets.WEBHOOK_URL }}"
          echo "TEST_CYCLE_LINK_PREFIX: ${{ secrets.TEST_CYCLE_LINK_PREFIX }}"

      - name: Install dependencies
        run: npm ci

      - name: Run Playwright tests (Ubuntu OS)
        run: |
          export DISPLAY=:99
          Xvfb $DISPLAY -screen 0 1024x768x24 > /dev/null 2>&1 &
          npm run test:e2e || true
          npm run test:e2e:send-report

      - name: Upload Mochawesome Report
        uses: actions/upload-artifact@v3.1.2
        with:
          name: mochawesome-report
          path: /home/runner/work/desktop/desktop/mochawesome-report/mochawesome.html

  # e2e-macos:
  #     runs-on: ${{ matrix.os }}
  #     strategy:
  #       matrix:
  #         os: [macos-latest]
  #         node-version: [18.x]

  #     steps:
  #       - name: Check out code
  #         uses: actions/checkout@v3.5.3

  #       - name: Set up Node.js
  #         uses: actions/setup-node@v3.7.0
  #         with:
  #           node-version: ${{ matrix.node-version }}
  #           cache: 'npm'

  #       - name: Setup Docker on macOS
  #         run: |
  #           brew install docker docker-compose
  #           colima start
  #           mkdir -p ~/.docker/cli-plugins
  #           ln -sfn /usr/local/opt/docker-compose/bin/docker-compose ~/.docker/cli-plugins/docker-compose

  #       - name: Checkout mattermost
  #         uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
  #         with:
  #           repository: mattermost/mattermost
  #           path: mattermost

  #       - name: Run mattermsot server
  #         run: |
  #           cd mattermost/e2e-tests
  #           echo "SERVER_IMAGE=mattermost/mattermost-enterprise-edition:release-8.0" >.ci/env
  #           make start-server && make prepare-server

  #       - name: Install dependencies
  #         run: npm ci

  #       - name: Run Playwright tests (macOS)
  #         run: |
  #           npm run test:e2e || true
  #           # npm run test:e2e:send-report

  #       - name: Upload Mochawesome Report
  #         uses: actions/upload-artifact@v3.1.2
  #         with:
  #           name: mochawesome-report
  #           path: /home/runner/work/desktop/desktop/mochawesome-report/mochawesome.html

  # e2e-windows:
  #   runs-on: ${{ matrix.os }}
  #   strategy:
  #     matrix:
  #       os: [windows-latest]
  #       node-version: [18.x]

  #   steps:
  #     - name: Check out code
  #       uses: actions/checkout@v3.5.3

  #     - name: Set up Node.js
  #       uses: actions/setup-node@v3.7.0
  #       with:
  #         node-version: ${{ matrix.node-version }}
  #         cache: 'npm'

  #     - name: Install Docker and Docker Compose
  #       run: |
  #         # choco install docker-cli
  #         # choco install docker-compose
  #         choco install make

  #         # Install Docker
  #         Invoke-WebRequest -Uri https://desktop.docker.com/win/stable/Docker%20Desktop%20Installer.exe -OutFile DockerDesktopInstaller.exe
  #         Start-Process -Wait -FilePath DockerDesktopInstaller.exe -ArgumentList '--quiet'

  #         # Wait for Docker to start (adjust the sleep duration if needed)
  #         Start-Sleep -Seconds 60

  #         # Download Docker Compose
  #         Invoke-WebRequest -Uri https://github.com/docker/compose/releases/latest/download/docker-compose-Windows-x86_64.exe -OutFile docker-compose.exe
          
  #         # Create the 'C:\Program Files\Docker' directory if it doesn't exist
  #         if (!(Test-Path 'C:\Program Files\Docker')) {
  #           New-Item -ItemType Directory -Path 'C:\Program Files\Docker' -Force
  #         }

  #         # Move Docker Compose to 'C:\Program Files\Docker'
  #         Move-Item .\docker-compose.exe 'C:\Program Files\Docker\docker-compose.exe'

  #         # Add Docker Compose to the system path
  #         $env:Path += ';C:\Program Files\Docker'

  #         docker network prune
  #         docker system prune

  #     - name: Checkout mattermost
  #       uses: actions/checkout@ac593985615ec2ede58e132d2e21d2b1cbd6127c # v3.3.0
  #       with:
  #         repository: mattermost/mattermost
  #         path: mattermost

  #     - name: Run mattermsot server
  #       run: |
  #         cd mattermost/e2e-tests
  #         echo "SERVER_IMAGE=mattermost/mattermost-enterprise-edition:release-8.0" >.ci/env
  #         make start-server && make prepare-server

  #     - name: Run Playwright tests (Windows)
  #       run: |
  #         npm run test:e2e || true
  #         # npm run test:e2e:send-report

  #     - name: Upload Mochawesome Report
  #       uses: actions/upload-artifact@v3.1.2
  #       with:
  #         name: mochawesome-report
  #         path: /home/runner/work/desktop/desktop/mochawesome-report/mochawesome.html
